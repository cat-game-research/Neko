BEGIN_OPTIONS
	Workflow "Unlit"
	Alpha "Add"
END_OPTIONS

BEGIN_PASS("Forward")
	Blend One [_SGT_DstBlend], One OneMinusSrcAlpha
	ZTest [_SGT_ZTest]
	Cull Off
END_PASS

BEGIN_PROPERTIES
	[NoScaleOffset] _MainTex("Main Tex", 2D) = "white" {}
	_SGT_Color("Color", Color) = (1,1,1,1)
	_SGT_Brightness("Brightness", Float) = 1
	[Enum(One,1,OneMinusSrcColor,6)] _SGT_DstBlend("DstBlend", Float) = 1 // 1 = One
	[Enum(LEqual,4,Always,8)] _SGT_ZTest("ZTest", Float) = 4 // 4 = LEqual

	[Header(POWER RGB)]
	[Toggle(_SGT_POWER_RGB)] _SGT_PowerRgb ("	Enable", Float) = 0
	_SGT_ColorInfluence("	Color Influence", Float) = 10

	[Header(NEAR FADE)]
	[Toggle(_SGT_NEAR_FADE)] _SGT_NearFade ("	Enable", Float) = 0
	_SGT_NearDistance("	Distance", Float) = 10000.0
END_PROPERTIES

BEGIN_DEFINES
	#pragma shader_feature_local _SGT_POWER_RGB
	#pragma shader_feature_local _SGT_NEAR_FADE
END_DEFINES

BEGIN_CBUFFER
	sampler2D _MainTex;
	float4    _SGT_Color;
	float     _SGT_Brightness;

	// Power RGB
	float _SGT_ColorInfluence;

	// Fade Near
	float _SGT_NearDistance;
END_CBUFFER

BEGIN_CODE
	void SurfaceFunction(inout Surface o, ShaderData d)
	{
		float4 main = tex2D(_MainTex, d.texcoord0.xy) * _SGT_Color;

		main.xyz *= _SGT_Brightness;

		#if _SGT_POWER_RGB
			main.rgb = pow(main.rgb, float3(1.0f, 1.0f, 1.0f) + (1.0f - d.vertexColor.rgb) * _SGT_ColorInfluence);
		#else
			main.rgb *= d.vertexColor.rgb;
		#endif

		#if _SGT_NEAR_FADE
			d.vertexColor.a *= smoothstep(0.0f, 1.0f, distance(d.worldSpacePosition, GetCameraWorldPosition()) / _SGT_NearDistance);
		#endif

		#if __SGT_OUTPUT
			SGT_OutputWithoutAlpha(o, SGT_ModifyUnlitOutput(main * d.vertexColor.a));
		#endif
	}
END_CODE